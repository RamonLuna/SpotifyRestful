
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.io.InputStream;
import javax.imageio.ImageIO;
import javax.json.Json;
import javax.json.JsonArray;
import javax.json.JsonObject;
import javax.json.JsonReader;
import javax.json.JsonValue;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import jaco.mp3.player.MP3Player;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class SpotifyRestful extends javax.swing.JFrame {

    public SpotifyRestful() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        albumesScrollPanel = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox(albums);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Consultas a Spotify");

        jLabel2.setText("Nombre del artista:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        albumesScrollPanel.setViewportView(jPanel1);

        jLabel3.setText("Artistas:");

        jLabel4.setText("√Ålbumes:");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane1.setViewportView(jPanel2);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 411, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 193, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel3);

        jLabel5.setText("Pistas:");
        jLabel6.setText("Guardar Canciones:  ");
        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(260, 260, 260)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(jLabel4)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel2)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButton1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel6)
                                                        .addComponent(jComboBox1)
                                                        .addComponent(jButton2))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel3)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jLabel5)
                                                                        .addGap(381, 381, 381))
                                                                .addComponent(jScrollPane2)))))
                                .addComponent(albumesScrollPanel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jComboBox1)
                                .addComponent(jButton2))
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(albumesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2)
                                .addComponent(jScrollPane1))
                        .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();

        setResizable(false);
        setLocationRelativeTo(null);
    }// </editor-fold>        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            URL url = new URL("https://api.spotify.com/v1/search?q=" + jTextField1.getText() + "&type=artist");
            HttpURLConnection conn1 = (HttpURLConnection) url.openConnection();
            conn1.setRequestMethod("GET");
            conn1.setRequestProperty("Accept", "application/json");
            if (conn1.getResponseCode() != 200) {
                throw new RuntimeException("Failed : HTTP error code : " + conn1.getResponseCode());
            }
            InputStream is = conn1.getInputStream();
            JsonReader rdr = Json.createReader(is);
            JsonObject obj = rdr.readObject();
            JsonObject artists = obj.getJsonObject("artists");
            JsonArray items = artists.getJsonArray("items");
            jPanel1.setLayout(new java.awt.GridLayout(0, 1));
            jPanel1.removeAll();
            nombreArtistaBd = new ArrayList<String>();
            for (JsonValue oneArtist : items) {
                nombreArtista = ((JsonObject) oneArtist).getString("name");
                nombreArtistaBd.add(((JsonObject) oneArtist).getString("name"));
                String artisId = ((JsonObject) oneArtist).getString("id");
                JButton boton = new JButton(nombreArtista);
                boton.setHorizontalAlignment(SwingConstants.LEFT);
                boton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        try {

                            URL url = new URL("https://api.spotify.com/v1/artists/" + artisId + "/albums");
                            HttpURLConnection conn2 = (HttpURLConnection) url.openConnection();
                            conn2.setRequestMethod("GET");
                            conn2.setRequestProperty("Accept", "application/json");
                            if (conn2.getResponseCode() != 200) {
                                throw new RuntimeException("Failed : HTTP error code : " + conn2.getResponseCode());
                            }
                            InputStream is = conn2.getInputStream();
                            JsonReader rdr = Json.createReader(is);
                            JsonObject obj = rdr.readObject();
                            JsonArray albums = obj.getJsonArray("items");
                            java.awt.GridLayout grdLayout = new java.awt.GridLayout(0, 1);
                            jPanel2.setLayout(grdLayout);
                            jPanel2.removeAll();
                            for (JsonValue oneAlbum : albums) {
                                String nombreAlbum = ((JsonObject) oneAlbum).getString("name");
                                String idAlbum = ((JsonObject) oneAlbum).getString("id");
                                String imagenURL = ((JsonObject) oneAlbum).getJsonArray("images").getJsonObject(2).getString("url");
                                URL urlImagen = new URL(imagenURL);
                                Image image = ImageIO.read(urlImagen);
                                JLabel imageLbl = new JLabel();
                                JButton nombreBtn = new JButton(nombreAlbum);
                                nombreBtn.addActionListener(new AlbumBtnListener(idAlbum));
                                ImageIcon icon = new ImageIcon(image);
                                imageLbl.setIcon(icon);
                                JPanel lineaPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
                                lineaPanel.add(imageLbl);
                                lineaPanel.add(nombreBtn);
                                jPanel2.add(lineaPanel);
                            }
                            jPanel2.revalidate();
                        } catch (MalformedURLException exc) {
                            System.out.println("Error en URL");
                        } catch (IOException exc) {
                            System.out.println("Error de lectura/escritura");
                            System.err.println(exc.getMessage());
                        }
                    }
                });
                jPanel1.add(boton);
            }
            jPanel1.revalidate();
        } catch (MalformedURLException e) {
            System.out.println("Error en URL");
        } catch (IOException e) {
            System.out.println("Error de lectura/escritura");
            System.err.println(e.getMessage());
        }
        // TODO add your handling code here:
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        //aqui va el metodo para hacer el guardado
        try {
            // create a mysql database connection
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost/triviamusicapp?&useSSL=false";
            //Vamos a crear una lista para poder seleccionar la BD
            String bd = (String) jComboBox1.getSelectedItem();

            Class.forName(myDriver);
            Connection conn = DriverManager.getConnection(myUrl, "root", "12345");
            PreparedStatement preparedStmt = null;
            for (int x = 0; x <= 2; x++) {
                // the mysql insert statement
                query = " insert into " + bd + " (nombreCancion, nombreArtista, uri)"
                        + " values (?, ?, ?)";

                // create the mysql insert preparedstatement
                preparedStmt = conn.prepareStatement(query);
                preparedStmt.setString(1, nombreCancionBd.get(x));//Nombre de Cancion
                preparedStmt.setString(2, nombreArtistaBd.get(0));//Nombre de Artista
                preparedStmt.setURL(3, uriBd.get(x));//URI
                // execute the preparedstatement
                preparedStmt.execute();
                System.out.println(nombreCancionBd);
                System.out.println(nombreArtistaBd);
                System.out.println(uriBd);
            }
            conn.close();
            JOptionPane.showMessageDialog(null, "Agregados Correctamente");

        } catch (Exception e) {
            System.err.println("Hubo un error aqui");
            System.err.println(e.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpotifyRestful.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpotifyRestful.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpotifyRestful.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpotifyRestful.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SpotifyRestful().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane albumesScrollPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    String nombreArtista;
    String nombreCancion;
    ArrayList<String> nombreCancionBd;
    ArrayList<String> nombreArtistaBd;
    ArrayList<URL> uriBd;
    URL urlName;
    String query;
    String[] albums = {"Seleccione Tabla", "Bachata", "Banda", "Cumbia", "Infantil",
        "Merengue", "Pop", "Reggaeton", "Rock", "Salsa"};
    // End of variables declaration                   

    class AlbumBtnListener implements ActionListener {

        String idAlbum;

        AlbumBtnListener(String idAlbum) {
            this.idAlbum = idAlbum;
        }

        @Override
        public void actionPerformed(ActionEvent e) {

            /**
             * ******************** Aqregar cÔøΩdigo aquÔøΩ
             * ************************************* Este cÔøΩdigo deberÔøΩ
             * solicitar las pistas de cada album y mostrarlas en el panel
             */
            try {
                URL url = new URL("https://api.spotify.com/v1/albums/" + idAlbum + "/tracks");
                HttpURLConnection conn3 = (HttpURLConnection) url.openConnection();
                conn3.setRequestMethod("GET");
                conn3.setRequestProperty("Accept", "application/json");
                if (conn3.getResponseCode() != 200) {
                    throw new RuntimeException("Failed : HTTP error code : " + conn3.getResponseCode());
                }
                InputStream is = conn3.getInputStream();
                JsonReader rdr = Json.createReader(is);
                JsonObject obj = rdr.readObject();
                JsonArray pistas = obj.getJsonArray("items");

                java.awt.GridLayout grdLayout = new java.awt.GridLayout(0, 1);
                jPanel3.setLayout(grdLayout);
                jPanel3.removeAll();

                int numPista = 1;
                nombreCancionBd = new ArrayList<String>();
                uriBd = new ArrayList<URL>();

                for (JsonValue oneTrack : pistas) {
                    if (numPista <= 3) {//if para mostrar el numero de la cancion
                        urlName = new URL(((JsonObject) oneTrack).getString("preview_url"));
                        MP3Player mp3 = new MP3Player(urlName);
                        nombreCancion = ((JsonObject) oneTrack).getString("name");
                        JLabel nombreLbl = new JLabel("Pista " + numPista + ": " + nombreCancion);

                        nombreCancionBd.add(((JsonObject) oneTrack).getString("name"));
                        uriBd.add(urlName);

                        jPanel3.add(nombreLbl);
                        jPanel3.add(mp3);
                        numPista++;
                    }
                }
                jPanel3.revalidate();
            } catch (IOException evt) {
                System.out.println("Error en URL");
                System.err.println(evt.getMessage());
            }
        }
    }
}
